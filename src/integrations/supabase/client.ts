// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Log des erreurs de connexion Supabase
supabase.auth.onAuthStateChange((event, session) => {
  console.log(`Supabase Auth State Change: ${event}`, session);
});

// Intercepter les erreurs de requête
const originalFrom = supabase.from.bind(supabase);
supabase.from = (table: string) => {
  const query = originalFrom(table);
  query.select = (...args: any[]) => {
    const result = (query.select as any)(...args);
    result.then = async (onFulfilled: any, onRejected: any) => {
      try {
        const data = await (result as any);
        return onFulfilled ? onFulfilled(data) : data;
      } catch (error) {
        console.error(`Erreur Supabase sur la table ${table}:`, error);
        if (onRejected) return onRejected(error);
        throw error;
      }
    };
    return result;
  };
  return query;
};

console.log("Supabase client initialisé avec :", { url: SUPABASE_URL, key: SUPABASE_PUBLISHABLE_KEY ? "*****" : "non définie" });